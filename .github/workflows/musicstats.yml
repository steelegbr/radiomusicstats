name: musicstats
on: [push]

env:
  PYTHON_VER: 3.9

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the commit
        uses: actions/checkout@v2
      - name: Black linting
        uses: psf/black@stable
  unit-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: musicstats_api
          POSTGRES_PASSWORD: Pa55w0rd
          POSTGRES_USER: musicstats_api
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - name: Check out the commit
        uses: actions/checkout@v2
      - name: Copy the test config
        run: cp ./musicstats/local_settings_test.py ./musicstats/local_settings.py
      - name: Install Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VER }}
      - name: Install Python dependancies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: Django unit tests
        run: |
          coverage run manage.py test
          coverage report
          coverage html
      - name: Generate code coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov
  build-container:
    needs: [linting, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the commit
        uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build the web app backend container (tagged)
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: "True"
          tags: steelegbr/musicstats:${{ env.GITHUB_REF_SLUG }}
      - name: Build the web app backend container (latest)
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: "True"
          tags: steelegbr/musicstats
